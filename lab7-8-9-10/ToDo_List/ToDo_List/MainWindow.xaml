<Window x:Class="ToDo_List.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDo_List"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:MyNamespace="clr-namespace:WpfCustomControlLibrary1;assembly=WpfCustomControlLibrary1"
        MinHeight="500" MinWidth ="800"
        Background="{DynamicResource BackgroundWindow}"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"    
        lex:LocalizeDictionary.DesignCulture="en"    
        lex:ResxLocalizationProvider.DefaultAssembly="ToDo_List"    
        lex:ResxLocalizationProvider.DefaultDictionary="Resources"
        Name="Window1"
        Icon="pack://application:,,,/Image/icon.png"
        Title="{lex:Loc TitleApp}" Height="600" Width="500"
        mc:Ignorable="d" >
    <Window.Resources>

        <local:BooleanToVisiblityConverter x:Key="BooleanToVisiblityConverter" />
        <local:PriorityToStringConverter x:Key="PriorityToStringConverter" />
        <local:StatusToStringConverter x:Key="StatusToStringConverter" />
        <Style x:Key="borderBase" TargetType="Border">
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.GreetUserCommand}" CanExecute="GreetUser_CanExecute" Executed="GreetUser_Executed"/>
    </Window.CommandBindings>
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Command="{x:Static local:MainWindow.GreetUserCommand}"/>
        </ContextMenu>
    </Window.ContextMenu>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <!-- Data -->
            <ListView SelectedItem="{Binding SelectedTask, Mode=TwoWay}"
                     IsEnabled="{Binding IsEnabled}"
                     Name="lstTasks"
                     ItemsSource="{Binding TasksList ,FallbackValue=TasksList}"
                     >
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="300"  Header="{lex:Loc Title}" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Title,FallbackValue=10}"  />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  Width="270" Header="{lex:Loc Priority}" DisplayMemberBinding="{Binding Priority,FallbackValue=SD , Converter={StaticResource PriorityToStringConverter}}"/>
                        <GridViewColumn  Width="250" Header="{lex:Loc Status}" DisplayMemberBinding="{Binding Status,FallbackValue=SD , Converter={StaticResource StatusToStringConverter}}"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <Grid Grid.Row="1">
                <!--Buttons-->
                <StackPanel Grid.Row="1"  HorizontalAlignment="Left" Orientation="Horizontal" Margin="5,2,5,10">
                    <TextBlock VerticalAlignment="Center" Margin="2,0,0,0" Text="Фильтрация по" FontSize="16"></TextBlock>
                    <Button Margin="2,0,0,0" Command="{Binding PriorityCommand}" Padding="2" Content="{lex:Loc PrioritySort}" />
                    <Button Margin="2,0,0,0" Command="{Binding StatusCommand}" Padding="2" Content="{lex:Loc StatusSort}" />
                    <Button Margin="2,0,0,0" Command="{Binding LanguageCommand}" Padding="2" Content="{lex:Loc Language}" />
                </StackPanel>
                <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal" Margin="5,2,5,10">
                    <Button Margin="2,0,0,-0.4" Command="{Binding SaveCommand}" Padding="2" Content="{lex:Loc Save}" />
                    <Button Margin="2,0,0,0" Command="{Binding CancelCommand}" Padding="2" Content="{lex:Loc Cancel}" />
                    <Button Margin="2,0,0,0" Command="{Binding EditCommand}" Padding="2" Content="{lex:Loc Edit}" />
                    <Button Margin="2,0,0,0" Command="{Binding AddCommand}" Padding="2" Content="{lex:Loc Add}" />
                    <Button Margin="2,0,0,0" Command="{Binding DeleteCommand}" Padding="2" Content="{lex:Loc Delete}" />
                </StackPanel>
            </Grid>



            <!--Информация о задаче-->
            <Border Grid.Row="2" Padding="7" Margin="7" Background="{DynamicResource BackgroundDescription}">
                <Grid   DataContext="{Binding ElementName=lstTasks, Path=SelectedItem}">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition SharedSizeGroup="SomeText" Height="Auto"></RowDefinition>
                        <RowDefinition SharedSizeGroup="SomeText" Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>


                    <!--Заголовок-->
                    <TextBlock Style="{StaticResource AnimationText}" Margin="7" Text="{lex:Loc Title}"/>
                    <TextBox  Grid.Column="1"
                    Margin="5" 
                    IsEnabled="{Binding  IsEnabled,FallbackValue=False}" 
                    >
                        <TextBox.Text>
                            <Binding Path="Title" Mode="TwoWay" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>


                    <!--Категория-->
                    <TextBlock Style="{StaticResource AnimationText}" Margin="7" Grid.Row="1" Text="{lex:Loc Category}"/>
                    <TextBox Grid.Row="1" Grid.Column="1"
                         Margin="5" IsEnabled="{Binding  IsEnabled,FallbackValue=False}"
                         >
                        <TextBox.Text>
                            <Binding Path="Category" Mode="TwoWay" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>


                    <!--День старта-->
                    <TextBlock Style="{StaticResource AnimationText}" Margin="7" Grid.Column="2" Text="{lex:Loc StartDate}"/>

                    <DatePicker  Visibility ="{Binding IsEnabled, Converter={StaticResource BooleanToVisiblityConverter},ConverterParameter=True,FallbackValue=Hidden}"
                         Margin="3"  IsEnabled="{Binding  IsEnabled,FallbackValue=False}"
                         Grid.Column="3"
                    >
                        <DatePicker.Text>
                            <Binding Path="StartDate" Mode="TwoWay" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </DatePicker.Text>
                    </DatePicker>
                    <TextBox 
                         Visibility ="{Binding IsEnabled, Converter={StaticResource BooleanToVisiblityConverter}}"
                         Margin="5"  IsEnabled="{Binding  IsEnabled,FallbackValue=False}"
                         Grid.Column="3"
                         Text="{Binding StartDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    />


                    <!--Приоритет-->
                    <TextBlock Style="{StaticResource AnimationText}" Margin="7" Grid.Row="1" Grid.Column="2" Text="{lex:Loc Priority}"/>

                    <TextBox  
                           Visibility ="{Binding IsEnabled, Converter={StaticResource BooleanToVisiblityConverter}}"
                           IsEnabled="{Binding  IsEnabled,FallbackValue=False}"
                           Margin="5"
                           Grid.Row="1" Grid.Column="3" 
                           Text="{Binding Priority,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PriorityToStringConverter}}"
                           />
                    <ComboBox
                    Visibility ="{Binding IsEnabled, Converter={StaticResource BooleanToVisiblityConverter},ConverterParameter=True,FallbackValue=Hidden}"
                    Grid.Row="1" Grid.Column="3" 
                    Height="20px"
                    ItemsSource="{Binding PriorityList}"
                    DisplayMemberPath="Name"
                    SelectedValuePath="Id" 
                    >
                        <ComboBox.SelectedValue>
                            <Binding Path="Priority" ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedValue>
                    </ComboBox>

                    <!--Статус-->
                    <TextBlock Style="{StaticResource AnimationText}" Margin="7"  Grid.Column="4" Text="{lex:Loc Status}"/>

                    <TextBox  
                           Visibility ="{Binding IsEnabled, Converter={StaticResource BooleanToVisiblityConverter} ,FallbackValue=Visible}"
                           IsEnabled="{Binding IsEnabled,FallbackValue=False}"
                           Margin="5"  
                           Grid.Column="5" 
                           Text="{Binding Status,Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StatusToStringConverter}}"
                           />
                    <ComboBox
                    Visibility ="{Binding IsEnabled, Converter={StaticResource BooleanToVisiblityConverter},ConverterParameter=True,FallbackValue=Hidden}"
                    Grid.Column="5" 
                    Height="20px"
                    ItemsSource="{Binding StatusList}"
                    DisplayMemberPath="Name"
                    SelectedValuePath="Id" >
                        <ComboBox.SelectedValue>
                            <Binding Path="Status" ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedValue>
                    </ComboBox>


                    <!--Описание-->
                    <TextBlock Style="{StaticResource AnimationText}" Margin="7,7,7,0" HorizontalAlignment="Center" Grid.Row="2" Text="{lex:Loc Description}" Grid.ColumnSpan="6"/>

                    <TextBox  IsEnabled="{Binding  IsEnabled,FallbackValue=False}"
                          Margin="5"
                          MinHeight="60px"
                          Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="6"
                          VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"
                         >
                        <TextBox.Text>
                            <Binding Path="MainInfo" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </Border>
            <!--Lab 9-->
            <StackPanel Grid.Row="3">
                <TextBlock Text="DataTrigger" HorizontalAlignment="Center"/>
                <CheckBox Name="cbSample" HorizontalAlignment="Center" Content="{lex:Loc CheckBoxTrigger}" />
                <TextBlock HorizontalAlignment="Center" Margin="0" FontSize="14">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="No" />
                            <Setter Property="Foreground" Value="Red" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=cbSample, Path=IsChecked}" Value="True">
                                    <Setter Property="Text" Value="Yes!" />
                                    <Setter Property="Foreground" Value="Green" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock FontSize="14" HorizontalAlignment="Center" Text="Выберите тему"/>
                <ComboBox HorizontalAlignment="Center" x:Name="styleBox" />
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <Button Command="{Binding UndoCommand}" Width="60" x:Name="ProfileOpen"    Padding="2">
                        <StackPanel HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind= "Undo" HorizontalAlignment="Center"    Foreground="Black"/>
                            <TextBlock HorizontalAlignment="Center" FontSize="12" Foreground="Black" Text="Назад"/>
                        </StackPanel>
                    </Button>
                    <Button Command="{Binding RedoCommand}" x:Name="ProfileOpen1"  Width="60"   Padding="2">
                        <StackPanel HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="Redo"  HorizontalAlignment="Center"    Foreground="Black"/>
                            <TextBlock HorizontalAlignment="Center" FontSize="12" Foreground="Black" Text="Вперед"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
                <MyNamespace:ControlLibrary1 HorizontalAlignment="Center" Margin="5"/>
                <StackPanel>
                    <TextBlock HorizontalAlignment="Center" Text="Демонстрация RoutedUICommand. ПКМ + кнопка" />
                    <TextBox Name="txtSomeText" CommandManager.PreviewExecuted="txtSomeText_PreviewExecuted" Width="220" Height="25" Margin="10"/>
                    <Button HorizontalAlignment="Center" Padding="10,5" Margin="10" Content="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}" Command="{x:Static local:MainWindow.GreetUserCommand}"/>
                </StackPanel>
            </StackPanel>
    </Grid>
    </ScrollViewer>
</Window>
